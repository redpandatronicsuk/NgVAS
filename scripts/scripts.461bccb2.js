"use strict";function px2cm(a){return a/pxPerCm}angular.module("ngVasApp",["color.picker","ngDropdowns"]),angular.module("ngVasApp").run(["$rootScope","$interval","$compile",function(a,b,c){a.customID="my-vas",a.customModel="myModel",a.lineHeight=.1,a.width="100%",a.height="40px",a.backgroundColor="whitesmoke",a.markerType="cross",a.markerTypes=["cross","line","point","arrow-up","arrow-down","arrow-left","arrow-right"],a.markerColor="black",a.enableDrag=!0,a.disableAfterClick=!1,a.numberOfClicks=1,a.showResetButton=!1,a.borderRadius=0,a.initialColor="white",a.clickedColor="grey",a.disableColor="darkgrey",a.draggingColor="pink",a.padding="40px",a.borderRadius="50px",a.withLabels=!0,a.showFeedback=!0,a.minLabel="cold",a.maxLabel="hot",a.min=0,a.max=1,a.precision=5,a.cms="cms",a.ddSelectOptions=[{text:"Cross",value:"cross"},{text:"Line",value:"line"},{text:"Point",value:"point"},{text:"Arrow-Up",value:"arrow-up"},{text:"Arrow-Down",value:"arrow-down"},{text:"Arrow-Left",value:"arrow-left"},{text:"Arrow-Right",value:"arrow-right"}],a.ddSelectSelected={text:"Cross",value:"cross"},a.handOffset=0,b(function(){a.handOffset=350*(Math.random()-.3)},1e3),a.updateCustom=function(){var b='<ng-vas id="'+a.customID+'" ng-model="'+a.customModel+'" width="'+a.width+'" height="'+a.height+'" line-height="'+a.lineHeight+'" marker-type="'+a.ddSelectSelected.value+'" marker-color="'+a.markerColor+'" min="'+a.min+'" max="'+a.max+'" cm-length="'+a.cms+'"></ng-vas>';a.customCode='<div class="vas-grid"><div ng-show="withLabels" class="min-label">{{minLabel}}</div>'+b+'<div ng-show="withLabels" class="max-label">{{maxLabel}}</div></div><div ng-show="showFeedback" style="text-align: center;" class="output"><h5>{{'+a.customModel+' | number:precision}} <small ng-show="cms">({{'+a.cms+" | number:precision}} cm)</small></h5></div>",a.withLabels?a.customCodeDisplay='<div class="vas-grid"><div class="min-label">'+a.minLabel+"</div>"+b+'<div class="max-label">'+a.maxLabel+"</div></div>":(a.customCode=b,a.customCodeDisplay=b),a.showFeedback&&(a.customCodeDisplay=a.customCodeDisplay+'<div style="text-align: center;" class="output"><h5>{{'+a.customModel+" | number:"+a.precision+'}} <small ng-show="cms">({{'+a.cms+" | number:"+a.precision+"}} cm)</small></h5></div>"),angular.element("#custom-output").html(c(a.customCode)(a))}}]);var d=$("<div/>").css({position:"absolute",top:"-1cm",left:"-1cm",height:"1cm",width:"1cm"}).appendTo("body"),pxPerCm=d.height();d.remove(),angular.module("ngVasApp").directive("ngVas",["$compile",function(a){return{template:'<div class="ng-vas" ng-class="clss"></div>',restrict:"E",scope:{ngModel:"=",min:"=",max:"=",cmLength:"="},replace:!0,link:function(b,c,d){b.opts={height:"40px",width:"100%",lineHeight:3,markerType:"cross",markerColor:"blue",min:0,max:100},b.clss={dragging:!1,clicked:!1},b.cmLength=void 0,angular.extend(b.opts,d),c.css("height",b.opts.height),c.css("width",b.opts.width),"cross"===b.opts.markerType?b.makerStr='<g class="vas-mark" stroke="'+b.opts.markerColor+'" ng-show="showMarker"><line ng-attr-x1="{{markerPos-4}}" y1="1" ng-attr-x2="{{markerPos+4}}" y2="9"/><line ng-attr-x1="{{markerPos+4}}" y1="1" ng-attr-x2="{{markerPos-4}}" y2="9"/></g>':"line"===b.opts.markerType?b.makerStr='<line class="vas-mark" stroke="'+b.opts.markerColor+'" ng-show="showMarker" id="vas-line" x1="{{markerPos}}" y1="1" x2="{{markerPos}}" y2="9"/>':"point"===b.opts.markerType?b.makerStr='<circle class="vas-mark" stroke="'+b.opts.markerColor+'" ng-show="showMarker" cx="{{markerPos}}" cy="5" r="2""/>':"arrow-down"===b.opts.markerType?b.makerStr='<g class="vas-mark" stroke="'+b.opts.markerColor+'" ng-show="showMarker"><line ng-attr-x1="{{markerPos}}" y1="1" ng-attr-x2="{{markerPos}}" y2="5"/><line ng-attr-x1="{{markerPos-2}}" y1="3" ng-attr-x2="{{markerPos}}" y2="5"/><line ng-attr-x1="{{markerPos+2}}" y1="3" ng-attr-x2="{{markerPos}}" y2="5"/></g>':"arrow-up"===b.opts.markerType?b.makerStr='<g class="vas-mark" stroke="'+b.opts.markerColor+'" ng-show="showMarker"><line ng-attr-x1="{{markerPos}}" y1="9" ng-attr-x2="{{markerPos}}" y2="5"/><line ng-attr-x1="{{markerPos-2}}" y1="7" ng-attr-x2="{{markerPos}}" y2="5"/><line ng-attr-x1="{{markerPos+2}}" y1="7" ng-attr-x2="{{markerPos}}" y2="5"/></g>':"arrow-left"===b.opts.markerType?b.makerStr='<g class="vas-mark" stroke="'+b.opts.markerColor+'" ng-show="showMarker"><line ng-attr-x1="{{markerPos+4}}" y1="5" ng-attr-x2="{{markerPos}}" y2="5"/><line ng-attr-x1="{{2 + markerPos}}" y1="3" ng-attr-x2="{{markerPos}}" y2="5"/><line ng-attr-x1="{{2 + markerPos}}" y1="7" ng-attr-x2="{{markerPos}}" y2="5"/></g>':"arrow-right"===b.opts.markerType&&(b.makerStr='<g class="vas-mark" stroke="'+b.opts.markerColor+'" ng-show="showMarker"><line ng-attr-x1="{{markerPos-4}}" y1="5" ng-attr-x2="{{markerPos}}" y2="5"/><line ng-attr-x1="{{markerPos - 2}}" y1="3" ng-attr-x2="{{markerPos}}" y2="5"/><line ng-attr-x1="{{markerPos - 2}}" y1="7" ng-attr-x2="{{markerPos}}" y2="5"/></g>'),c.append(a('<svg preserveAspectRatio="none" stroke="black" stroke-linecap="round" viewBox="0 0 100 10" style="width:100%;height:100%;px;position:relative;background-clip: padding-box;"><rect onmousedown="return false" id="vas-line-horz" style="cursor:pointer;" x="0" ng-attr-y="{{5 - opts.lineHeight/2}}" width="100" ng-attr-height="{{opts.lineHeight}}"/>'+b.makerStr+"</svg>")(b));var e=new Hammer(c.children("svg").children("#vas-line-horz")[0],{preventDefault:!0,drag:!0}),f=b.opts.max-b.opts.min;e.on("tap pan panstart panend",function(a){b.clss.clicked=!0;var d=getComputedStyle(a.target.parentNode.parentNode),e=parseFloat(d.paddingLeft,10)+parseFloat(d.borderLeftWidth,10),g=a.pointers[0].clientX-(c.offset().left+e),h=Math.min(1,Math.max(g/c.width(),0)),i=angular.element(a.target.parentNode).children(".vas-marker").width();angular.element(a.target.parentNode).children(".vas-marker").css("left",a.pointers[0].clientX-(c.offset().left+i/2)+"px"),b.$apply(function(){b.markerPos=100*h,b.ngModel=h*f+Number(b.opts.min),b.cmLength=px2cm(g),b.showMarker=!0,"panstart"===a.type?b.clss.dragging=!0:"panend"===a.type&&(b.clss.dragging=!1)})})}}}]);